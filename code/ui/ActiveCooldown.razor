@using Sandbox;
@using Sandbox.UI;
@using System.Collections.Generic;
@using System
@using TerrorTown;
@using System.Linq;
@inherits Panel

@namespace TCT_Classes.UI

<style>
    .hello {
        position: absolute;
        height: 48px;
        width: 300px;
        left: 32px;
        bottom: 198px;
        font-size: 32px;
        border-radius: 12px;
        text-shadow: 2px 2px 4px darkgray;
        background-color: rgba(16,16,16,0.4);
        align-items: center;
        justify-content: center;
    }

    .progressbarbg {
        border: 0.5px solid rgba(128,128,128,0.16) font-size: 30px;
        box-shadow: 0px 0px 24px rgba(0,0,0,0.4); 
        width: 100%;
        max-height: 100%;
        min-height: 100%;
        overflow: hidden;
        border-radius: 12px;
    }

    .progress {
        position: absolute;
        top: 0;
        left: 0;
        height: 100%;
        background-color: #33D733;
    }

    .progress-text {
        justify-content: center;
        align-items: center;
        text-transform: uppercase;
        font-family: Poppins-SemiBold;
        font-weight: 800;
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
    }

</style>

<div class="hello">
    <div class="progressbarbg">

        <div class="progress" style="width: @(widthcalc)%"></div>
        <div class="progress" style="width: @(pushbutton)%; background-color:rgba(0,50, 200, 0.4)"></div>
        <div class="progress-text">@("Active (" + Input.GetButtonOrigin("Spray") + ")")</div>
    </div>
    </div>
</div>

@code
{
    private string className { get; set; }

    private Color classColor { get; set; }

    private double widthcalc {get; set; }

    private double pushbutton { get; set; }

    public void Init(string classname, Color classcolor)
    {
        className = classname;
        classColor = classcolor;
    }

    protected override int BuildHash()
    {
        var player_class = Game.LocalPawn.Components.Get<TTT_Class>();
        if (player_class == null)
        {
            Log.Error("Have active cooldown, but couldn't find player class!");
        }
        if (Input.Down("Spray"))
        {
            pushbutton = Math.Clamp((player_class.HoldButtonDown.Relative / player_class.buttonDownDuration) * 100, 0, 100);
        }
        else
        {
            pushbutton = 0;
        }
        widthcalc = Math.Clamp((player_class.AbilityCooldown.Fraction * 100), 0, 100);
        return HashCode.Combine(pushbutton, widthcalc);
    }
}
